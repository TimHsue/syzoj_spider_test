问题编号:117


问题标题:[乱搞说不定能过]sxy的评测--[未审核]


问题描述:
ruby是sxy非常喜欢的一门编程语言，最近sxy更是对ruby 解释器的底层实现很是好奇，于是sxy决定自己手动实现一个很简单的ruby语言的一个子集。我们这个简化的ruby有这样的规则：

关键字：

**只有**：if,end   (区分大小写)

符号

== (判断相等)，左右小括号()，分号; 

变量名:

**只能是**大小写字母+下划线的组合，并且变量名开头不允许是下划线。

规则：
在这个简化的ruby中，**并不检查**一个变量是否在之前定义，即遇到的所有可能是变量的东西就认为他是变量。（但是**关键字可是不能作为变量名**的）。每条语句后面并不要求加分号 ; 但是**加了并不算错**。你喜欢用空格，或者tab缩进，都没问题，ruby并不会强制要求用缩进来区分代码块，而是用类似if...end这样的方式来区分。**任何表达式都可以单独作为一条语句**，常量表达式，一个变量组成的一个表达式，外层可以嵌套任意层数的括号，当然括号**一定是要前后匹配**的，否则就会发生**语法错误**。==运算符的两边可以都是常量，都是变量，或者一边一个常量另一边一个变量，这都是允许的。

if...end语句使用方法，形如这样的：
```
if  一个表达式，这个表达式并不强制要求用小括号括起来。但无论如何，这个表达式与if之间必须要有个空格隔开
     这里做一些事情，if是支持嵌套的
end
```
if 2或者if (2)是对的。if2，if(2)都是错的

表达式可以是一个数，一个变量，或者一个条件，比如
```
if a == 2
 if (b)
  if 3
   (2333)
   sxy_biglaw_is_good  
  end
 end
end
```
例如上面的代码中，2333这个常量表达式可以单独作为一条语句，并且后面并不检查sxy_biglaw_is_good这个变量在之前是否定义过，就当他是合法的了。

这样，凡是上面**没有提到过允许的，都是不允许的**

现在给你一段这个简化的ruby的代码，请你判断这段代码是否合法


输入格式:
一段代码，可能有很多行


输出格式:
如果这段代码合法则输出
```
Accepted
```
否则输出
```
Not Accepted
```


测试样例:
####样例输入1
```
if (a) == 2
    233666
    hhh_hhhh
   if abc
   end
end

```
####样例输出1
```
Accepted
```

####样例输入2
```
 if a.e)
   if 2333 == c
   end
```
####样例输出2
```
Not Accepted
```
####样例2的解释
很明显 a.e这个不符合变量命名规范。并且下面if跟end无法成对匹配


数据范围与提示
代码总字符数 &lt;= 1000  


